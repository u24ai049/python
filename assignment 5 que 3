def next_lexicographic_permutation(w):
    w = list(w)
    i = len(w) - 2

    # Step 1: Find pivot
    while i >= 0 and w[i] >= w[i + 1]:
        i -= 1

    if i == -1:
        return "no answer"

    # Step 2: Find successor
    j = len(w) - 1
    while w[j] <= w[i]:
        j -= 1

    # Step 3: Swap pivot and successor
    w[i], w[j] = w[j], w[i]

    # Step 4: Reverse suffix
    w[i + 1:] = reversed(w[i + 1:])
    return ''.join(w)

# Input processing
t = int(input())
results = []
for _ in range(t):
    w = input().strip()
    results.append(next_lexicographic_permutation(w))

# Output results
for res in results:
    print(res)
